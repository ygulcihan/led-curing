; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\obj\fmc.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\fmc.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I../Library -I..\Library\CMSIS\Include -I..\Library\Device\Nuvoton\NUC029FAE\Include -I..\Library\StdDriver\inc -I..\Library\Sinyalizasyon\inc -I..\Template -IC:\Users\palad\AppData\Local\Arm\Packs\Nuvoton\NuMicro_DFP\1.3.18\Device\NUC029AE\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=537 --omf_browse=.\obj\fmc.crf ..\Library\StdDriver\src\fmc.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  FMC_SetBootSource PROC
;;;35       */
;;;36     void FMC_SetBootSource (int32_t i32BootSrc)
000000  4967              LDR      r1,|L1.416|
;;;37     {
;;;38         if (i32BootSrc == 1)
;;;39             FMC->ISPCON |= FMC_ISPCON_BS_Msk;
000002  2202              MOVS     r2,#2
000004  2801              CMP      r0,#1                 ;38
;;;40         else
;;;41             FMC->ISPCON &= ~FMC_ISPCON_BS_Msk;
000006  6808              LDR      r0,[r1,#0]
000008  d002              BEQ      |L1.16|
00000a  4390              BICS     r0,r0,r2
                  |L1.12|
00000c  6008              STR      r0,[r1,#0]            ;39
;;;42     }
00000e  4770              BX       lr
                  |L1.16|
000010  4310              ORRS     r0,r0,r2              ;39
000012  e7fb              B        |L1.12|
;;;43     
                          ENDP

                  FMC_Close PROC
;;;47       */
;;;48     void FMC_Close(void)
000014  4862              LDR      r0,|L1.416|
;;;49     {
;;;50         FMC->ISPCON &= ~FMC_ISPCON_ISPEN_Msk;
000016  6801              LDR      r1,[r0,#0]
000018  0849              LSRS     r1,r1,#1
00001a  0049              LSLS     r1,r1,#1
00001c  6001              STR      r1,[r0,#0]
;;;51     }
00001e  4770              BX       lr
;;;52     
                          ENDP

                  FMC_DisableAPUpdate PROC
;;;56       */
;;;57     void FMC_DisableAPUpdate(void)
000020  485f              LDR      r0,|L1.416|
;;;58     {
;;;59         FMC->ISPCON &= ~FMC_ISPCON_APUEN_Msk;
000022  6801              LDR      r1,[r0,#0]
000024  2208              MOVS     r2,#8
000026  4391              BICS     r1,r1,r2
000028  6001              STR      r1,[r0,#0]
;;;60     }
00002a  4770              BX       lr
;;;61     
                          ENDP

                  FMC_DisableConfigUpdate PROC
;;;65       */
;;;66     void FMC_DisableConfigUpdate(void)
00002c  485c              LDR      r0,|L1.416|
;;;67     {
;;;68         FMC->ISPCON &= ~FMC_ISPCON_CFGUEN_Msk;
00002e  6801              LDR      r1,[r0,#0]
000030  2210              MOVS     r2,#0x10
000032  4391              BICS     r1,r1,r2
000034  6001              STR      r1,[r0,#0]
;;;69     }
000036  4770              BX       lr
;;;70     
                          ENDP

                  FMC_DisableLDUpdate PROC
;;;74       */
;;;75     void FMC_DisableLDUpdate(void)
000038  4859              LDR      r0,|L1.416|
;;;76     {
;;;77         FMC->ISPCON &= ~FMC_ISPCON_LDUEN_Msk;
00003a  6801              LDR      r1,[r0,#0]
00003c  2220              MOVS     r2,#0x20
00003e  4391              BICS     r1,r1,r2
000040  6001              STR      r1,[r0,#0]
;;;78     }
000042  4770              BX       lr
;;;79     
                          ENDP

                  FMC_EnableAPUpdate PROC
;;;83       */
;;;84     void FMC_EnableAPUpdate(void)
000044  4856              LDR      r0,|L1.416|
;;;85     {
;;;86         FMC->ISPCON |= FMC_ISPCON_APUEN_Msk;
000046  6801              LDR      r1,[r0,#0]
000048  2208              MOVS     r2,#8
00004a  4311              ORRS     r1,r1,r2
00004c  6001              STR      r1,[r0,#0]
;;;87     }
00004e  4770              BX       lr
;;;88     
                          ENDP

                  FMC_EnableConfigUpdate PROC
;;;92       */
;;;93     void FMC_EnableConfigUpdate(void)
000050  4853              LDR      r0,|L1.416|
;;;94     {
;;;95         FMC->ISPCON |= FMC_ISPCON_CFGUEN_Msk;
000052  6801              LDR      r1,[r0,#0]
000054  2210              MOVS     r2,#0x10
000056  4311              ORRS     r1,r1,r2
000058  6001              STR      r1,[r0,#0]
;;;96     }
00005a  4770              BX       lr
;;;97     
                          ENDP

                  FMC_EnableLDUpdate PROC
;;;101      */
;;;102    void FMC_EnableLDUpdate(void)
00005c  4850              LDR      r0,|L1.416|
;;;103    {
;;;104        FMC->ISPCON |= FMC_ISPCON_LDUEN_Msk;
00005e  6801              LDR      r1,[r0,#0]
000060  2220              MOVS     r2,#0x20
000062  4311              ORRS     r1,r1,r2
000064  6001              STR      r1,[r0,#0]
;;;105    }
000066  4770              BX       lr
;;;106    
                          ENDP

                  FMC_Erase PROC
;;;113      */
;;;114    int32_t FMC_Erase(uint32_t u32PageAddr)
000068  494d              LDR      r1,|L1.416|
;;;115    {
;;;116        FMC->ISPCMD = FMC_ISPCMD_PAGE_ERASE;
00006a  2222              MOVS     r2,#0x22
00006c  60ca              STR      r2,[r1,#0xc]
;;;117        FMC->ISPADR = u32PageAddr;
00006e  6048              STR      r0,[r1,#4]
;;;118        FMC->ISPTRG = FMC_ISPTRG_ISPGO_Msk;
000070  2001              MOVS     r0,#1
000072  6108              STR      r0,[r1,#0x10]
                  |L1.116|
;;;119    
;;;120        while (FMC->ISPTRG & FMC_ISPTRG_ISPGO_Msk) ;
000074  6908              LDR      r0,[r1,#0x10]
000076  07c0              LSLS     r0,r0,#31
000078  d1fc              BNE      |L1.116|
;;;121    
;;;122        if (FMC->ISPCON & FMC_ISPCON_ISPFF_Msk)
00007a  6808              LDR      r0,[r1,#0]
00007c  0640              LSLS     r0,r0,#25
00007e  d506              BPL      |L1.142|
;;;123        {
;;;124            FMC->ISPCON |= FMC_ISPCON_ISPFF_Msk;
000080  6808              LDR      r0,[r1,#0]
000082  2240              MOVS     r2,#0x40
000084  4310              ORRS     r0,r0,r2
000086  6008              STR      r0,[r1,#0]
;;;125            return -1;
000088  2000              MOVS     r0,#0
00008a  43c0              MVNS     r0,r0
;;;126        }
;;;127        return 0;
;;;128    }
00008c  4770              BX       lr
                  |L1.142|
00008e  2000              MOVS     r0,#0                 ;127
000090  4770              BX       lr
;;;129    
                          ENDP

                  FMC_GetBootSource PROC
;;;135      */
;;;136    int32_t FMC_GetBootSource (void)
000092  4843              LDR      r0,|L1.416|
;;;137    {
;;;138        if (FMC->ISPCON & FMC_ISPCON_BS_Msk)
000094  6800              LDR      r0,[r0,#0]
000096  0780              LSLS     r0,r0,#30
000098  d501              BPL      |L1.158|
;;;139            return 1;
00009a  2001              MOVS     r0,#1
;;;140        else
;;;141            return 0;
;;;142    }
00009c  4770              BX       lr
                  |L1.158|
00009e  2000              MOVS     r0,#0                 ;141
0000a0  4770              BX       lr
;;;143    
                          ENDP

                  FMC_Open PROC
;;;147      */
;;;148    void FMC_Open(void)
0000a2  483f              LDR      r0,|L1.416|
;;;149    {
;;;150        FMC->ISPCON |=  FMC_ISPCON_ISPEN_Msk;
0000a4  6801              LDR      r1,[r0,#0]
0000a6  2201              MOVS     r2,#1
0000a8  4311              ORRS     r1,r1,r2
0000aa  6001              STR      r1,[r0,#0]
;;;151    }
0000ac  4770              BX       lr
;;;152    
                          ENDP

                  FMC_Read PROC
;;;158      */
;;;159    uint32_t FMC_Read(uint32_t u32Addr)
0000ae  493c              LDR      r1,|L1.416|
;;;160    {
;;;161        FMC->ISPCMD = FMC_ISPCMD_READ;
0000b0  2200              MOVS     r2,#0
0000b2  60ca              STR      r2,[r1,#0xc]
;;;162        FMC->ISPADR = u32Addr;
0000b4  6048              STR      r0,[r1,#4]
;;;163        FMC->ISPTRG = FMC_ISPTRG_ISPGO_Msk;
0000b6  2001              MOVS     r0,#1
0000b8  6108              STR      r0,[r1,#0x10]
                  |L1.186|
;;;164    
;;;165        while (FMC->ISPTRG & FMC_ISPTRG_ISPGO_Msk) ;
0000ba  6908              LDR      r0,[r1,#0x10]
0000bc  07c0              LSLS     r0,r0,#31
0000be  d1fc              BNE      |L1.186|
;;;166    
;;;167        return FMC->ISPDAT;
0000c0  6888              LDR      r0,[r1,#8]
;;;168    }
0000c2  4770              BX       lr
;;;169    
                          ENDP

                  FMC_ReadCID PROC
;;;174      */
;;;175    uint32_t FMC_ReadCID(void)
0000c4  4836              LDR      r0,|L1.416|
;;;176    {
;;;177        FMC->ISPCMD = FMC_ISPCMD_READ_CID;
0000c6  210b              MOVS     r1,#0xb
0000c8  60c1              STR      r1,[r0,#0xc]
;;;178        FMC->ISPADR = 0x0;
0000ca  2100              MOVS     r1,#0
0000cc  6041              STR      r1,[r0,#4]
;;;179        FMC->ISPTRG = FMC_ISPTRG_ISPGO_Msk;
0000ce  2101              MOVS     r1,#1
0000d0  6101              STR      r1,[r0,#0x10]
                  |L1.210|
;;;180        while (FMC->ISPTRG & FMC_ISPTRG_ISPGO_Msk) ;
0000d2  6901              LDR      r1,[r0,#0x10]
0000d4  07c9              LSLS     r1,r1,#31
0000d6  d1fc              BNE      |L1.210|
;;;181        return FMC->ISPDAT;
0000d8  6880              LDR      r0,[r0,#8]
;;;182    }
0000da  4770              BX       lr
;;;183    
                          ENDP

                  FMC_ReadPID PROC
;;;188      */
;;;189    uint32_t FMC_ReadPID(void)
0000dc  4830              LDR      r0,|L1.416|
;;;190    {
;;;191        FMC->ISPCMD = FMC_ISPCMD_READ_PID;
0000de  210c              MOVS     r1,#0xc
0000e0  60c1              STR      r1,[r0,#0xc]
;;;192        FMC->ISPADR = 0x04;
0000e2  2104              MOVS     r1,#4
0000e4  6041              STR      r1,[r0,#4]
;;;193        FMC->ISPTRG = FMC_ISPTRG_ISPGO_Msk;
0000e6  2101              MOVS     r1,#1
0000e8  6101              STR      r1,[r0,#0x10]
                  |L1.234|
;;;194        while (FMC->ISPTRG & FMC_ISPTRG_ISPGO_Msk) ;
0000ea  6901              LDR      r1,[r0,#0x10]
0000ec  07c9              LSLS     r1,r1,#31
0000ee  d1fc              BNE      |L1.234|
;;;195        return FMC->ISPDAT;
0000f0  6880              LDR      r0,[r0,#8]
;;;196    }
0000f2  4770              BX       lr
;;;197    
                          ENDP

                  FMC_ReadUCID PROC
;;;203      */
;;;204    uint32_t FMC_ReadUCID(uint32_t u32Index)
0000f4  492a              LDR      r1,|L1.416|
;;;205    {
;;;206        FMC->ISPCMD = FMC_ISPCMD_READ_UID;
0000f6  2204              MOVS     r2,#4
0000f8  60ca              STR      r2,[r1,#0xc]
;;;207        FMC->ISPADR = (0x04 * u32Index) + 0x10;
0000fa  0080              LSLS     r0,r0,#2
0000fc  3010              ADDS     r0,r0,#0x10
0000fe  6048              STR      r0,[r1,#4]
;;;208        FMC->ISPTRG = FMC_ISPTRG_ISPGO_Msk;
000100  2001              MOVS     r0,#1
000102  6108              STR      r0,[r1,#0x10]
                  |L1.260|
;;;209    
;;;210        while (FMC->ISPTRG & FMC_ISPTRG_ISPGO_Msk) ;
000104  6908              LDR      r0,[r1,#0x10]
000106  07c0              LSLS     r0,r0,#31
000108  d1fc              BNE      |L1.260|
;;;211    
;;;212        return FMC->ISPDAT;
00010a  6888              LDR      r0,[r1,#8]
;;;213    }
00010c  4770              BX       lr
;;;214    
                          ENDP

                  FMC_ReadUID PROC
;;;220      */
;;;221    uint32_t FMC_ReadUID(uint32_t u32Index)
00010e  4924              LDR      r1,|L1.416|
;;;222    {
;;;223        FMC->ISPCMD = FMC_ISPCMD_READ_UID;
000110  2204              MOVS     r2,#4
000112  60ca              STR      r2,[r1,#0xc]
;;;224        FMC->ISPADR = 0x04 * u32Index;
000114  0080              LSLS     r0,r0,#2
000116  6048              STR      r0,[r1,#4]
;;;225        FMC->ISPTRG = FMC_ISPTRG_ISPGO_Msk;
000118  2001              MOVS     r0,#1
00011a  6108              STR      r0,[r1,#0x10]
                  |L1.284|
;;;226    
;;;227        while (FMC->ISPTRG & FMC_ISPTRG_ISPGO_Msk) ;
00011c  6908              LDR      r0,[r1,#0x10]
00011e  07c0              LSLS     r0,r0,#31
000120  d1fc              BNE      |L1.284|
;;;228    
;;;229        return FMC->ISPDAT;
000122  6888              LDR      r0,[r1,#8]
;;;230    }
000124  4770              BX       lr
;;;231    
                          ENDP

                  FMC_ReadDataFlashBaseAddr PROC
;;;236      */
;;;237    uint32_t FMC_ReadDataFlashBaseAddr(void)
000126  481e              LDR      r0,|L1.416|
;;;238    {
;;;239        return FMC->DFBADR;
000128  6940              LDR      r0,[r0,#0x14]
;;;240    }
00012a  4770              BX       lr
;;;241    
                          ENDP

                  FMC_SetVectorPageAddr PROC
;;;246      */
;;;247    void FMC_SetVectorPageAddr(uint32_t u32PageAddr)
00012c  491c              LDR      r1,|L1.416|
;;;248    {
;;;249        FMC->ISPCMD = FMC_ISPCMD_VECMAP;
00012e  222e              MOVS     r2,#0x2e
000130  60ca              STR      r2,[r1,#0xc]
;;;250        FMC->ISPADR = u32PageAddr;
000132  6048              STR      r0,[r1,#4]
;;;251        FMC->ISPTRG = FMC_ISPTRG_ISPGO_Msk;
000134  2001              MOVS     r0,#1
000136  6108              STR      r0,[r1,#0x10]
                  |L1.312|
;;;252        while (FMC->ISPTRG & FMC_ISPTRG_ISPGO_Msk) ;
000138  6908              LDR      r0,[r1,#0x10]
00013a  07c0              LSLS     r0,r0,#31
00013c  d1fc              BNE      |L1.312|
;;;253    }
00013e  4770              BX       lr
;;;254    
                          ENDP

                  FMC_Write PROC
;;;260      */
;;;261    void FMC_Write(uint32_t u32Addr, uint32_t u32Data)
000140  4a17              LDR      r2,|L1.416|
;;;262    {
;;;263        FMC->ISPCMD = FMC_ISPCMD_PROGRAM;
000142  2321              MOVS     r3,#0x21
000144  60d3              STR      r3,[r2,#0xc]
;;;264        FMC->ISPADR = u32Addr;
000146  6050              STR      r0,[r2,#4]
;;;265        FMC->ISPDAT = u32Data;
000148  6091              STR      r1,[r2,#8]
;;;266        FMC->ISPTRG = FMC_ISPTRG_ISPGO_Msk;
00014a  2001              MOVS     r0,#1
00014c  6110              STR      r0,[r2,#0x10]
                  |L1.334|
;;;267        while (FMC->ISPTRG & FMC_ISPTRG_ISPGO_Msk) ;
00014e  6910              LDR      r0,[r2,#0x10]
000150  07c0              LSLS     r0,r0,#31
000152  d1fc              BNE      |L1.334|
;;;268    }
000154  4770              BX       lr
;;;269    
                          ENDP

                  FMC_ReadConfig PROC
;;;277      */
;;;278    int32_t FMC_ReadConfig(uint32_t *u32Config, uint32_t u32Count)
000156  b510              PUSH     {r4,lr}
;;;279    {
000158  4603              MOV      r3,r0
;;;280        u32Config[0] = FMC_Read(FMC_CONFIG_BASE);
00015a  2003              MOVS     r0,#3
00015c  460c              MOV      r4,r1                 ;279
00015e  0500              LSLS     r0,r0,#20
000160  f7fffffe          BL       FMC_Read
;;;281        if (u32Count < 2)
000164  6018              STR      r0,[r3,#0]
000166  2c02              CMP      r4,#2
000168  d303              BCC      |L1.370|
;;;282            return 0;
;;;283        u32Config[1] = FMC_Read(FMC_CONFIG_BASE+4);
00016a  480e              LDR      r0,|L1.420|
00016c  f7fffffe          BL       FMC_Read
000170  6058              STR      r0,[r3,#4]
                  |L1.370|
000172  2000              MOVS     r0,#0                 ;282
;;;284        return 0;
;;;285    }
000174  bd10              POP      {r4,pc}
;;;286    
                          ENDP

                  FMC_WriteConfig PROC
;;;294      */
;;;295    int32_t FMC_WriteConfig(uint32_t *u32Config, uint32_t u32Count)
000176  b510              PUSH     {r4,lr}
;;;296    {
000178  4604              MOV      r4,r0
;;;297        FMC_EnableConfigUpdate();
00017a  f7fffffe          BL       FMC_EnableConfigUpdate
;;;298        FMC_Erase(FMC_CONFIG_BASE);
00017e  2303              MOVS     r3,#3
000180  051b              LSLS     r3,r3,#20
000182  4618              MOV      r0,r3
000184  f7fffffe          BL       FMC_Erase
;;;299        FMC_Write(FMC_CONFIG_BASE, u32Config[0]);
000188  4618              MOV      r0,r3
00018a  6821              LDR      r1,[r4,#0]
00018c  f7fffffe          BL       FMC_Write
;;;300        FMC_Write(FMC_CONFIG_BASE+4, u32Config[1]);
000190  4804              LDR      r0,|L1.420|
000192  6861              LDR      r1,[r4,#4]
000194  f7fffffe          BL       FMC_Write
;;;301        FMC_DisableConfigUpdate();
000198  f7fffffe          BL       FMC_DisableConfigUpdate
;;;302        return 0;
00019c  2000              MOVS     r0,#0
;;;303    }
00019e  bd10              POP      {r4,pc}
;;;304    
                          ENDP

                  |L1.416|
                          DCD      0x5000c000
                  |L1.420|
                          DCD      0x00300004

;*** Start embedded assembler ***

#line 1 "..\\Library\\StdDriver\\src\\fmc.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_fmc_c_15679c7a____REV16|
#line 388 "..\\Library\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___5_fmc_c_15679c7a____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_fmc_c_15679c7a____REVSH|
#line 402
|__asm___5_fmc_c_15679c7a____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
